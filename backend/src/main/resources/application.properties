spring.application.name=backend

management.endpoint.startup.enabled=true
# Enable actuator endpoints
management.endpoints.web.exposure.include=health,info,startup
management.endpoints.web.base-path=/api/system

# Exclude WebSocket if you're not using it directly
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration,org.springframework.boot.autoconfigure.websocket.reactive.WebSocketReactiveAutoConfiguration

#database related values
spring.datasource.url=${DATASOURCE_URL}
spring.datasource.username=${POSTGRES_USERNAME}
spring.datasource.password=${PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto = update

#third party apis
rent.cast.base.url=${RENT_CAST_BASE_URL}
rent.cast.api.key=${RENT_CAST_API_KEY}
airbnb.base.url=${AIRBNB_BASE_URL}
airbnb.host=${AIRBNB_HOST}
airbnb.api.key=${AIRBNB_API_KEY}
craigslist.base.url=${CRAIGSLIST_BASE_URL}
craigslist.host=${CRAIGSLIST_HOST}
craigslist.api.key=${CRAIGSLIST_API_KEY}
zillow.base.url=${ZILLOW_BASE_URL}
zillow.host=${ZILLOW_HOST}
zillow.api.key=${ZILLOW_API_KEY}
google.geo.code.api.key=${GOOGLE_GEO_CODE_API_KEY}

#JWT configurations
secret.key=${SECRET_KEY}
security.jwt.expiration-time = 1800000

#Email
support.email=${SUPPORT_EMAIL}
email.secret.key=${EMAIL_SECRET_KEY}

#CORS/Cookie configurations
frontend.domain=${FRONTEND_DOMAIN}
is.secure.cookie = ${IS_SECURE_COOKIE}

#Logging configurations
logging.level.web=${LOGGING_LEVEL}
logging.level.org.springframework.core.env=${LOGGING_LEVEL}
spring.devtools.restart.enabled=${ENABLE_DEV_TOOLS}

#Vaadin configurations
vaadin.pushMode=${PUSH_MODE}
vaadin.liveReload.enabled=${ENABLE_DEV_TOOLS}

#Rate Limiting
# Enable bucket4j
bucket4j.enabled=true
# Configure a filter
bucket4j.filters[0].cache-name=buckets
bucket4j.filters[0].url=/api/.*
bucket4j.filters[0].cache-key=getRemoteAddr()
#rate limits
bucket4j.filters[0].rate-limits[0].bandwidths[0].capacity=10
bucket4j.filters[0].rate-limits[0].bandwidths[0].time=1
bucket4j.filters[0].rate-limits[0].bandwidths[0].unit=minutes

# response returned
bucket4j.filters[0].http-response-body={ "status": 429, "error": "Too Many Requests", "message": "Rate limit exceeded" }



