spring.application.name=backend

management.endpoint.startup.enabled=true
# Enable actuator endpoints
management.endpoints.web.exposure.include=health,info,startup
management.endpoints.web.base-path=/api/system


#database related values
spring.datasource.url=${DATASOURCE_URL}
spring.datasource.username=${POSTGRES_USERNAME}
spring.datasource.password=${PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto = update

#third party apis
rent.cast.base.url=${RENT_CAST_BASE_URL}
rent.cast.api.key=${RENT_CAST_API_KEY}
airbnb.base.url=${AIRBNB_BASE_URL}
airbnb.host=${AIRBNB_HOST}
airbnb.api.key=${AIRBNB_API_KEY}
craigslist.base.url=${CRAIGSLIST_BASE_URL}
craigslist.host=${CRAIGSLIST_HOST}
craigslist.api.key=${CRAIGSLIST_API_KEY}
zillow.base.url=${ZILLOW_BASE_URL}
zillow.host=${ZILLOW_HOST}
zillow.api.key=${ZILLOW_API_KEY}
google.geo.code.api.key=${GOOGLE_GEO_CODE_API_KEY}

#JWT configurations
secret.key=${SECRET_KEY}
security.jwt.expiration-time = 1800000

#Email
support.email=${SUPPORT_EMAIL}
email.secret.key=${EMAIL_SECRET_KEY}

#CORS/Cookie configurations
frontend.domain=${FRONTEND_DOMAIN}
is.secure.cookie = ${IS_SECURE_COOKIE}

#Logging configurations
logging.level.web=${LOGGING_LEVEL}
logging.level.org.springframework.core.env=${LOGGING_LEVEL}
spring.devtools.restart.enabled=${ENABLE_DEV_TOOLS}

#Vaadin configurations
vaadin.pushMode=${PUSH_MODE}
vaadin.liveReload.enabled=${ENABLE_DEV_TOOLS}

# Rate Limiting Configuration
resilience4j.ratelimiter.instances.auths.limitForPeriod=10
resilience4j.ratelimiter.instances.auths.limitRefreshPeriod=10s
resilience4j.ratelimiter.instances.auths.timeoutDuration=0

resilience4j.ratelimiter.instances.profile-pictures.limitForPeriod=20
resilience4j.ratelimiter.instances.profile-pictures.limitRefreshPeriod=10s
resilience4j.ratelimiter.instances.profile-pictures.timeoutDuration=0

resilience4j.ratelimiter.instances.favorites.limitForPeriod=10
resilience4j.ratelimiter.instances.favorites.limitRefreshPeriod=10s
resilience4j.ratelimiter.instances.favorites.timeoutDuration=0

resilience4j.ratelimiter.instances.housing.limitForPeriod=10
resilience4j.ratelimiter.instances.housing.limitRefreshPeriod=10s
resilience4j.ratelimiter.instances.housing.timeoutDuration=0

resilience4j.ratelimiter.instances.user.limitForPeriod=10
resilience4j.ratelimiter.instances.user.limitRefreshPeriod=10s
resilience4j.ratelimiter.instances.user.timeoutDuration=0

resilience4j.ratelimiter.instances.preferences.limitForPeriod=10
resilience4j.ratelimiter.instances.preferences.limitRefreshPeriod=10s
resilience4j.ratelimiter.instances.preferences.timeoutDuration=0


# Azure details
azure.storage.account-name=${AZURE_STORAGE_ACCOUNT_NAME}
azure.storage.account-key=${AZURE_STORAGE_ACCOUNT_KEY}
azure.storage.container-name=${AZURE_STORAGE_CONTAINER_NAME}

# Image properties
spring.servlet.multipart.max-file-size=7MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.enabled=true

#Cron Job Service Details
cron.job.service.url=${CRON_JOB_SERVICE_URL}
cron.job.service.access.header=${CRON_JOB_SERVICE_ACCESS_HEADER}
cron.job.service.web.socket.endpoint=${CRON_JOB_SERVICE_WEBSOCKET_ENDPOINT}
