# Postgres DB
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${POSTGRES_USERNAME}
quarkus.datasource.password=${PASSWORD}
quarkus.datasource.jdbc.url=${DATASOURCE_URL}
quarkus.datasource.jdbc.max-size=16

# Logging
quarkus.log.level=${LOGGING_LEVEL:INFO}

# Secret Key
api.token.secret.key=${TOKEN_GENERATION_SECRET_KEY}

# Service to service interaction config
keymaster_service.api.token=${KEYMASTER_SERVICE_API_TOKEN}
keymaster_service.service.name=${KEYMASTER_SERVICE_SERVICE_NAME}

# INeedHousing email service
quarkus.rest-client.api-email.url=${INEEDHOUSING_API_URL}
quarkus.rest-client.api-email.connect-timeout=10000
quarkus.rest-client.api-email.read-timeout=15000

# Email Service
quarkus.rest-client.email-service.url=${EMAIL_SERVICE_URL}
quarkus.rest-client.email-service.connect-timeout=10000
quarkus.rest-client.email-service.read-timeout=15000

# INeedHousing
ineedhousing.service.name=${INEEDHOUSING_SERVICE_NAME}

quarkus.http.port=${PORT:8080}

de.mkammerer.argon2jni.native=false

quarkus.resteasy-reactive.scan-providers=true
quarkus.log.category."org.jboss.resteasy.reactive.client".level=${LOGGING_LEVEL:INFO}
quarkus.log.category."io.quarkus.rest.client".level=${LOGGING_LEVEL:INFO}

# CORS
quarkus.http.cors.enabled=true
quarkus.http.cors.origins=${ADMIN_APP_DOMAIN}
quarkus.http.cors.methods=GET,PUT,POST,DELETE
quarkus.http.cors.headers=*
quarkus.http.cors.access-control-allow-credentials=true